{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/harshith/Documents/portfolio/src/contexts/ThemeContext.tsx"],"sourcesContent":["'use client'\n\nimport { createContext, useContext, useEffect, useState } from 'react'\n\ntype Theme = 'light' | 'dark'\n\ninterface ThemeContextType {\n  theme: Theme\n  toggleTheme: () => void\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined)\n\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\n  const [theme, setTheme] = useState<Theme>('dark')\n\n  useEffect(() => {\n    // Check for saved theme preference or default to dark\n    const savedTheme = localStorage.getItem('theme') as Theme\n    if (savedTheme) {\n      setTheme(savedTheme)\n    } else {\n      setTheme('dark')\n    }\n  }, [])\n\n  useEffect(() => {\n    // Apply theme to document\n    document.documentElement.classList.remove('light', 'dark')\n    document.documentElement.classList.add(theme)\n    localStorage.setItem('theme', theme)\n  }, [theme])\n\n  const toggleTheme = () => {\n    setTheme(prev => prev === 'light' ? 'dark' : 'light')\n  }\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext)\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider')\n  }\n  return context\n}\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAWA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,SAAS,cAAc,KAA2C;QAA3C,EAAE,QAAQ,EAAiC,GAA3C;;IAC5B,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS;IAE1C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,sDAAsD;YACtD,MAAM,aAAa,aAAa,OAAO,CAAC;YACxC,IAAI,YAAY;gBACd,SAAS;YACX,OAAO;gBACL,SAAS;YACX;QACF;kCAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,0BAA0B;YAC1B,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS;YACnD,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;YACvC,aAAa,OAAO,CAAC,SAAS;QAChC;kCAAG;QAAC;KAAM;IAEV,MAAM,cAAc;QAClB,SAAS,CAAA,OAAQ,SAAS,UAAU,SAAS;IAC/C;IAEA,qBACE,6LAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAO;QAAY;kBAChD;;;;;;AAGP;GA7BgB;KAAA;AA+BT,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///home/harshith/Documents/portfolio/src/components/ScrollProgress.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { motion, AnimatePresence } from 'framer-motion'\n\nconst ScrollProgress = () => {\n  const [scrollProgress, setScrollProgress] = useState(0)\n  const [isScrolling, setIsScrolling] = useState(false)\n  const [currentSection, setCurrentSection] = useState('')\n\n  useEffect(() => {\n    let scrollTimeout: NodeJS.Timeout\n\n    const updateScrollProgress = () => {\n      const currentProgress = window.scrollY\n      const scrollHeight = document.body.scrollHeight - window.innerHeight\n      \n      if (scrollHeight) {\n        setScrollProgress((currentProgress / scrollHeight) * 100)\n      }\n\n      // Detect current section\n      const sections = ['hero', 'about', 'skills', 'projects', 'experience', 'contact']\n      const currentSection = sections.find(section => {\n        const element = document.getElementById(section)\n        if (element) {\n          const rect = element.getBoundingClientRect()\n          return rect.top <= 100 && rect.bottom >= 100\n        }\n        return false\n      })\n      \n      if (currentSection) {\n        setCurrentSection(currentSection)\n      }\n\n      // Show scrolling indicator\n      setIsScrolling(true)\n      clearTimeout(scrollTimeout)\n      scrollTimeout = setTimeout(() => {\n        setIsScrolling(false)\n      }, 150)\n    }\n\n    // Initial calculation\n    updateScrollProgress()\n\n    // Add scroll event listener\n    window.addEventListener('scroll', updateScrollProgress, { passive: true })\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('scroll', updateScrollProgress)\n      clearTimeout(scrollTimeout)\n    }\n  }, [])\n\n  const getSectionEmoji = (section: string) => {\n    const emojiMap: Record<string, string> = {\n      hero: 'üè†',\n      about: 'üë®‚Äçüíª',\n      skills: '‚ö°',\n      projects: 'üöÄ',\n      experience: 'üíº',\n      contact: 'üìß'\n    }\n    return emojiMap[section] || '‚ú®'\n  }\n\n  return (\n    <>\n      <div className=\"scroll-progress\">\n        <motion.div\n          className=\"scroll-progress-bar\"\n          style={{ width: `${scrollProgress}%` }}\n          initial={{ width: 0 }}\n          animate={{ width: `${scrollProgress}%` }}\n          transition={{\n            type: \"spring\",\n            stiffness: 400,\n            damping: 40\n          }}\n        />\n        \n        {/* Section indicator */}\n        <AnimatePresence>\n          {isScrolling && currentSection && (\n            <motion.div\n              initial={{ opacity: 0, y: 20, scale: 0 }}\n              animate={{ opacity: 1, y: 0, scale: 1 }}\n              exit={{ opacity: 0, y: 20, scale: 0 }}\n              className=\"fixed bottom-8 left-1/2 transform -translate-x-1/2 z-50 bg-white/90 dark:bg-warm-800/90 backdrop-blur-md rounded-full px-6 py-3 shadow-lg border border-warm-200 dark:border-warm-600\"\n            >\n              <div className=\"flex items-center space-x-3\">\n                <span className=\"text-xl\">{getSectionEmoji(currentSection)}</span>\n                <div className=\"flex flex-col items-center\">\n                  <span className=\"text-sm font-medium text-warm-700 dark:text-warm-300 capitalize\">\n                    {currentSection}\n                  </span>\n                  <span className=\"text-xs text-warm-500 dark:text-warm-400\">\n                    {Math.round(scrollProgress)}% complete\n                  </span>\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </>\n  )\n}\n\nexport default ScrollProgress\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;;;AAHA;;;AAKA,MAAM,iBAAiB;;IACrB,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI;YAEJ,MAAM;iEAAuB;oBAC3B,MAAM,kBAAkB,OAAO,OAAO;oBACtC,MAAM,eAAe,SAAS,IAAI,CAAC,YAAY,GAAG,OAAO,WAAW;oBAEpE,IAAI,cAAc;wBAChB,kBAAkB,AAAC,kBAAkB,eAAgB;oBACvD;oBAEA,yBAAyB;oBACzB,MAAM,WAAW;wBAAC;wBAAQ;wBAAS;wBAAU;wBAAY;wBAAc;qBAAU;oBACjF,MAAM,iBAAiB,SAAS,IAAI;wFAAC,CAAA;4BACnC,MAAM,UAAU,SAAS,cAAc,CAAC;4BACxC,IAAI,SAAS;gCACX,MAAM,OAAO,QAAQ,qBAAqB;gCAC1C,OAAO,KAAK,GAAG,IAAI,OAAO,KAAK,MAAM,IAAI;4BAC3C;4BACA,OAAO;wBACT;;oBAEA,IAAI,gBAAgB;wBAClB,kBAAkB;oBACpB;oBAEA,2BAA2B;oBAC3B,eAAe;oBACf,aAAa;oBACb,gBAAgB;yEAAW;4BACzB,eAAe;wBACjB;wEAAG;gBACL;;YAEA,sBAAsB;YACtB;YAEA,4BAA4B;YAC5B,OAAO,gBAAgB,CAAC,UAAU,sBAAsB;gBAAE,SAAS;YAAK;YAExE,UAAU;YACV;4CAAO;oBACL,OAAO,mBAAmB,CAAC,UAAU;oBACrC,aAAa;gBACf;;QACF;mCAAG,EAAE;IAEL,MAAM,kBAAkB,CAAC;QACvB,MAAM,WAAmC;YACvC,MAAM;YACN,OAAO;YACP,QAAQ;YACR,UAAU;YACV,YAAY;YACZ,SAAS;QACX;QACA,OAAO,QAAQ,CAAC,QAAQ,IAAI;IAC9B;IAEA,qBACE;kBACE,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;oBACT,WAAU;oBACV,OAAO;wBAAE,OAAO,AAAC,GAAiB,OAAf,gBAAe;oBAAG;oBACrC,SAAS;wBAAE,OAAO;oBAAE;oBACpB,SAAS;wBAAE,OAAO,AAAC,GAAiB,OAAf,gBAAe;oBAAG;oBACvC,YAAY;wBACV,MAAM;wBACN,WAAW;wBACX,SAAS;oBACX;;;;;;8BAIF,6LAAC,4LAAA,CAAA,kBAAe;8BACb,eAAe,gCACd,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,SAAS;4BAAG,GAAG;4BAAI,OAAO;wBAAE;wBACvC,SAAS;4BAAE,SAAS;4BAAG,GAAG;4BAAG,OAAO;wBAAE;wBACtC,MAAM;4BAAE,SAAS;4BAAG,GAAG;4BAAI,OAAO;wBAAE;wBACpC,WAAU;kCAEV,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAK,WAAU;8CAAW,gBAAgB;;;;;;8CAC3C,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAK,WAAU;sDACb;;;;;;sDAEH,6LAAC;4CAAK,WAAU;;gDACb,KAAK,KAAK,CAAC;gDAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUhD;GAzGM;KAAA;uCA2GS","debugId":null}}]
}